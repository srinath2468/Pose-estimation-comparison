;; Auto-generated. Do not edit!


(when (boundp 'visp_hand2eye_calibration::getposesFeedback)
  (if (not (find-package "VISP_HAND2EYE_CALIBRATION"))
    (make-package "VISP_HAND2EYE_CALIBRATION"))
  (shadow 'getposesFeedback (find-package "VISP_HAND2EYE_CALIBRATION")))
(unless (find-package "VISP_HAND2EYE_CALIBRATION::GETPOSESFEEDBACK")
  (make-package "VISP_HAND2EYE_CALIBRATION::GETPOSESFEEDBACK"))

(in-package "ROS")
;;//! \htmlinclude getposesFeedback.msg.html


(defclass visp_hand2eye_calibration::getposesFeedback
  :super ros::object
  :slots (_poses_sent ))

(defmethod visp_hand2eye_calibration::getposesFeedback
  (:init
   (&key
    ((:poses_sent __poses_sent) nil)
    )
   (send-super :init)
   (setq _poses_sent __poses_sent)
   self)
  (:poses_sent
   (&optional __poses_sent)
   (if __poses_sent (setq _poses_sent __poses_sent)) _poses_sent)
  (:serialization-length
   ()
   (+
    ;; bool _poses_sent
    1
    ))
  (:serialize
   (&optional strm)
   (let ((s (if strm strm
              (make-string-output-stream (send self :serialization-length)))))
     ;; bool _poses_sent
       (if _poses_sent (write-byte -1 s) (write-byte 0 s))
     ;;
     (if (null strm) (get-output-stream-string s))))
  (:deserialize
   (buf &optional (ptr- 0))
   ;; bool _poses_sent
     (setq _poses_sent (not (= 0 (sys::peek buf ptr- :char)))) (incf ptr- 1)
   ;;
   self)
  )

(setf (get visp_hand2eye_calibration::getposesFeedback :md5sum-) "f555082d98a684b739b7f9ebba06a141")
(setf (get visp_hand2eye_calibration::getposesFeedback :datatype-) "visp_hand2eye_calibration/getposesFeedback")
(setf (get visp_hand2eye_calibration::getposesFeedback :definition-)
      "# ====== DO NOT MODIFY! AUTOGENERATED FROM AN ACTION DEFINITION ======
# Define a feedback message
bool poses_sent

")



(provide :visp_hand2eye_calibration/getposesFeedback "f555082d98a684b739b7f9ebba06a141")


