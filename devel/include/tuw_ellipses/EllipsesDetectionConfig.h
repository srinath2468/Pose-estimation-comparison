//#line 2 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the tuw_ellipses package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __tuw_ellipses__ELLIPSESDETECTIONCONFIG_H__
#define __tuw_ellipses__ELLIPSESDETECTIONCONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace tuw_ellipses
{
  class EllipsesDetectionConfigStatics;

  class EllipsesDetectionConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }

      virtual void clamp(EllipsesDetectionConfig &config, const EllipsesDetectionConfig &max, const EllipsesDetectionConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const EllipsesDetectionConfig &config1, const EllipsesDetectionConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, EllipsesDetectionConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const EllipsesDetectionConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, EllipsesDetectionConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const EllipsesDetectionConfig &config) const = 0;
      virtual void getValue(const EllipsesDetectionConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T EllipsesDetectionConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T (EllipsesDetectionConfig::* field);

      virtual void clamp(EllipsesDetectionConfig &config, const EllipsesDetectionConfig &max, const EllipsesDetectionConfig &min) const
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const EllipsesDetectionConfig &config1, const EllipsesDetectionConfig &config2) const
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, EllipsesDetectionConfig &config) const
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const EllipsesDetectionConfig &config) const
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, EllipsesDetectionConfig &config) const
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const EllipsesDetectionConfig &config) const
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const EllipsesDetectionConfig &config, boost::any &val) const
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, EllipsesDetectionConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, EllipsesDetectionConfig &top) const
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T (PT::* field);
      std::vector<EllipsesDetectionConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(EllipsesDetectionConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("show_camera_image"==(*_i)->name){show_camera_image = boost::any_cast<bool>(val);}
        if("show_camera_image_waitkey"==(*_i)->name){show_camera_image_waitkey = boost::any_cast<int>(val);}
        if("debug"==(*_i)->name){debug = boost::any_cast<bool>(val);}
        if("plubishTF"==(*_i)->name){plubishTF = boost::any_cast<bool>(val);}
        if("plubishMarker"==(*_i)->name){plubishMarker = boost::any_cast<bool>(val);}
        if("publishFiducials"==(*_i)->name){publishFiducials = boost::any_cast<bool>(val);}
        if("distorted_input"==(*_i)->name){distorted_input = boost::any_cast<bool>(val);}
        if("debug_freeze"==(*_i)->name){debug_freeze = boost::any_cast<bool>(val);}
        if("image_skip"==(*_i)->name){image_skip = boost::any_cast<int>(val);}
        if("edge_detection"==(*_i)->name){edge_detection = boost::any_cast<int>(val);}
        if("threshold_edge_detection1"==(*_i)->name){threshold_edge_detection1 = boost::any_cast<int>(val);}
        if("threshold_edge_detection2"==(*_i)->name){threshold_edge_detection2 = boost::any_cast<int>(val);}
        if("kernel_size_edge_detection"==(*_i)->name){kernel_size_edge_detection = boost::any_cast<int>(val);}
        if("edge_linking"==(*_i)->name){edge_linking = boost::any_cast<int>(val);}
        if("threshold_contour_min_points"==(*_i)->name){threshold_contour_min_points = boost::any_cast<int>(val);}
        if("threshold_polygon"==(*_i)->name){threshold_polygon = boost::any_cast<int>(val);}
        if("filter_convex"==(*_i)->name){filter_convex = boost::any_cast<bool>(val);}
        if("threshold_rotated_rect_ratio"==(*_i)->name){threshold_rotated_rect_ratio = boost::any_cast<double>(val);}
        if("ellipse_redefinement"==(*_i)->name){ellipse_redefinement = boost::any_cast<bool>(val);}
        if("filter_contour_mean"==(*_i)->name){filter_contour_mean = boost::any_cast<bool>(val);}
        if("threshold_contour_mean"==(*_i)->name){threshold_contour_mean = boost::any_cast<double>(val);}
        if("threshold_min_radius"==(*_i)->name){threshold_min_radius = boost::any_cast<double>(val);}
        if("threshold_max_radius"==(*_i)->name){threshold_max_radius = boost::any_cast<double>(val);}
        if("filter_rings"==(*_i)->name){filter_rings = boost::any_cast<bool>(val);}
        if("threshold_ring_center"==(*_i)->name){threshold_ring_center = boost::any_cast<double>(val);}
        if("threshold_ring_ratio"==(*_i)->name){threshold_ring_ratio = boost::any_cast<double>(val);}
        if("pose_estimation"==(*_i)->name){pose_estimation = boost::any_cast<int>(val);}
        if("circle_diameter"==(*_i)->name){circle_diameter = boost::any_cast<double>(val);}
        if("skip_second_tf"==(*_i)->name){skip_second_tf = boost::any_cast<bool>(val);}
      }
    }

    bool show_camera_image;
int show_camera_image_waitkey;
bool debug;
bool plubishTF;
bool plubishMarker;
bool publishFiducials;
bool distorted_input;
bool debug_freeze;
int image_skip;
int edge_detection;
int threshold_edge_detection1;
int threshold_edge_detection2;
int kernel_size_edge_detection;
int edge_linking;
int threshold_contour_min_points;
int threshold_polygon;
bool filter_convex;
double threshold_rotated_rect_ratio;
bool ellipse_redefinement;
bool filter_contour_mean;
double threshold_contour_mean;
double threshold_min_radius;
double threshold_max_radius;
bool filter_rings;
double threshold_ring_center;
double threshold_ring_ratio;
int pose_estimation;
double circle_diameter;
bool skip_second_tf;

    bool state;
    std::string name;

    
}groups;



//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool show_camera_image;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int show_camera_image_waitkey;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool debug;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool plubishTF;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool plubishMarker;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool publishFiducials;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool distorted_input;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool debug_freeze;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int image_skip;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int edge_detection;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int threshold_edge_detection1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int threshold_edge_detection2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int kernel_size_edge_detection;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int edge_linking;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int threshold_contour_min_points;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int threshold_polygon;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool filter_convex;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double threshold_rotated_rect_ratio;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool ellipse_redefinement;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool filter_contour_mean;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double threshold_contour_mean;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double threshold_min_radius;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double threshold_max_radius;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool filter_rings;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double threshold_ring_center;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double threshold_ring_ratio;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int pose_estimation;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double circle_diameter;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool skip_second_tf;
//#line 228 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("EllipsesDetectionConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const EllipsesDetectionConfig &__max__ = __getMax__();
      const EllipsesDetectionConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const EllipsesDetectionConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const EllipsesDetectionConfig &__getDefault__();
    static const EllipsesDetectionConfig &__getMax__();
    static const EllipsesDetectionConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const EllipsesDetectionConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void EllipsesDetectionConfig::ParamDescription<std::string>::clamp(EllipsesDetectionConfig &config, const EllipsesDetectionConfig &max, const EllipsesDetectionConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class EllipsesDetectionConfigStatics
  {
    friend class EllipsesDetectionConfig;

    EllipsesDetectionConfigStatics()
    {
EllipsesDetectionConfig::GroupDescription<EllipsesDetectionConfig::DEFAULT, EllipsesDetectionConfig> Default("Default", "", 0, 0, true, &EllipsesDetectionConfig::groups);
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_camera_image = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_camera_image = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_camera_image = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("show_camera_image", "bool", 0, "Show camera image", "", &EllipsesDetectionConfig::show_camera_image)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("show_camera_image", "bool", 0, "Show camera image", "", &EllipsesDetectionConfig::show_camera_image)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.show_camera_image_waitkey = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.show_camera_image_waitkey = 1000;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.show_camera_image_waitkey = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("show_camera_image_waitkey", "int", 0, "Time to draw the camera image in ms", "", &EllipsesDetectionConfig::show_camera_image_waitkey)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("show_camera_image_waitkey", "int", 0, "Time to draw the camera image in ms", "", &EllipsesDetectionConfig::show_camera_image_waitkey)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.debug = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.debug = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.debug = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("debug", "bool", 0, "Shows additional debug information", "", &EllipsesDetectionConfig::debug)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("debug", "bool", 0, "Shows additional debug information", "", &EllipsesDetectionConfig::debug)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.plubishTF = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.plubishTF = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.plubishTF = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("plubishTF", "bool", 0, "publish tf messages", "", &EllipsesDetectionConfig::plubishTF)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("plubishTF", "bool", 0, "publish tf messages", "", &EllipsesDetectionConfig::plubishTF)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.plubishMarker = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.plubishMarker = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.plubishMarker = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("plubishMarker", "bool", 0, "plublish marker messages", "", &EllipsesDetectionConfig::plubishMarker)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("plubishMarker", "bool", 0, "plublish marker messages", "", &EllipsesDetectionConfig::plubishMarker)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.publishFiducials = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.publishFiducials = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.publishFiducials = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("publishFiducials", "bool", 0, "plublish marker messages", "", &EllipsesDetectionConfig::publishFiducials)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("publishFiducials", "bool", 0, "plublish marker messages", "", &EllipsesDetectionConfig::publishFiducials)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.distorted_input = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.distorted_input = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.distorted_input = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("distorted_input", "bool", 0, "the input image is distort", "", &EllipsesDetectionConfig::distorted_input)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("distorted_input", "bool", 0, "the input image is distort", "", &EllipsesDetectionConfig::distorted_input)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.debug_freeze = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.debug_freeze = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.debug_freeze = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("debug_freeze", "bool", 0, "Freezes the input image", "", &EllipsesDetectionConfig::debug_freeze)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("debug_freeze", "bool", 0, "Freezes the input image", "", &EllipsesDetectionConfig::debug_freeze)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.image_skip = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.image_skip = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.image_skip = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("image_skip", "int", 0, "skip frames", "", &EllipsesDetectionConfig::image_skip)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("image_skip", "int", 0, "skip frames", "", &EllipsesDetectionConfig::image_skip)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.edge_detection = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.edge_detection = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.edge_detection = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("edge_detection", "int", 0, "Edge detection strategy", "{'enum_description': 'Edge detection strategy', 'enum': [{'srcline': 17, 'description': 'BW Threshold', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'threshold'}, {'srcline': 18, 'description': 'Canny', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'canny'}]}", &EllipsesDetectionConfig::edge_detection)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("edge_detection", "int", 0, "Edge detection strategy", "{'enum_description': 'Edge detection strategy', 'enum': [{'srcline': 17, 'description': 'BW Threshold', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'threshold'}, {'srcline': 18, 'description': 'Canny', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'canny'}]}", &EllipsesDetectionConfig::edge_detection)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_edge_detection1 = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_edge_detection1 = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_edge_detection1 = 150;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_edge_detection1", "int", 0, "edge detection", "", &EllipsesDetectionConfig::threshold_edge_detection1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_edge_detection1", "int", 0, "edge detection", "", &EllipsesDetectionConfig::threshold_edge_detection1)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_edge_detection2 = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_edge_detection2 = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_edge_detection2 = 100;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_edge_detection2", "int", 0, "edge detection", "", &EllipsesDetectionConfig::threshold_edge_detection2)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_edge_detection2", "int", 0, "edge detection", "", &EllipsesDetectionConfig::threshold_edge_detection2)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.kernel_size_edge_detection = 3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.kernel_size_edge_detection = 7;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.kernel_size_edge_detection = 3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("kernel_size_edge_detection", "int", 0, "edge detection", "", &EllipsesDetectionConfig::kernel_size_edge_detection)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("kernel_size_edge_detection", "int", 0, "edge detection", "", &EllipsesDetectionConfig::kernel_size_edge_detection)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.edge_linking = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.edge_linking = 4;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.edge_linking = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("edge_linking", "int", 0, "Edge detection strategy", "{'enum_description': 'Edge linking strategy', 'enum': [{'srcline': 24, 'description': 'OpenCV', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'opencv_approx_non'}, {'srcline': 25, 'description': 'OpenCV', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'opencv_approx_simple'}, {'srcline': 26, 'description': 'V4R', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'v4r_simple'}, {'srcline': 27, 'description': 'V4R', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'v4r_complex'}, {'srcline': 28, 'description': 'V4R', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'v4r_contour'}]}", &EllipsesDetectionConfig::edge_linking)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("edge_linking", "int", 0, "Edge detection strategy", "{'enum_description': 'Edge linking strategy', 'enum': [{'srcline': 24, 'description': 'OpenCV', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'opencv_approx_non'}, {'srcline': 25, 'description': 'OpenCV', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'opencv_approx_simple'}, {'srcline': 26, 'description': 'V4R', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'v4r_simple'}, {'srcline': 27, 'description': 'V4R', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 3, 'ctype': 'int', 'type': 'int', 'name': 'v4r_complex'}, {'srcline': 28, 'description': 'V4R', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 4, 'ctype': 'int', 'type': 'int', 'name': 'v4r_contour'}]}", &EllipsesDetectionConfig::edge_linking)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_contour_min_points = 10;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_contour_min_points = 255;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_contour_min_points = 20;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_contour_min_points", "int", 0, "edge detection", "", &EllipsesDetectionConfig::threshold_contour_min_points)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_contour_min_points", "int", 0, "edge detection", "", &EllipsesDetectionConfig::threshold_contour_min_points)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_polygon = 3;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_polygon = 16;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_polygon = 5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_polygon", "int", 0, "epsylon to approximate polygon", "", &EllipsesDetectionConfig::threshold_polygon)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("threshold_polygon", "int", 0, "epsylon to approximate polygon", "", &EllipsesDetectionConfig::threshold_polygon)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.filter_convex = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.filter_convex = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.filter_convex = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("filter_convex", "bool", 0, "rings only", "", &EllipsesDetectionConfig::filter_convex)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("filter_convex", "bool", 0, "rings only", "", &EllipsesDetectionConfig::filter_convex)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_rotated_rect_ratio = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_rotated_rect_ratio = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_rotated_rect_ratio = 0.02;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_rotated_rect_ratio", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::threshold_rotated_rect_ratio)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_rotated_rect_ratio", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::threshold_rotated_rect_ratio)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ellipse_redefinement = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ellipse_redefinement = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ellipse_redefinement = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("ellipse_redefinement", "bool", 0, "Dual ellipse redefinement", "", &EllipsesDetectionConfig::ellipse_redefinement)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("ellipse_redefinement", "bool", 0, "Dual ellipse redefinement", "", &EllipsesDetectionConfig::ellipse_redefinement)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.filter_contour_mean = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.filter_contour_mean = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.filter_contour_mean = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("filter_contour_mean", "bool", 0, "rings only", "", &EllipsesDetectionConfig::filter_contour_mean)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("filter_contour_mean", "bool", 0, "rings only", "", &EllipsesDetectionConfig::filter_contour_mean)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_contour_mean = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_contour_mean = 0.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_contour_mean = 0.05;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_contour_mean", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::threshold_contour_mean)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_contour_mean", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::threshold_contour_mean)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_min_radius = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_min_radius = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_min_radius = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_min_radius", "double", 0, "min radius in ration to image", "", &EllipsesDetectionConfig::threshold_min_radius)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_min_radius", "double", 0, "min radius in ration to image", "", &EllipsesDetectionConfig::threshold_min_radius)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_max_radius = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_max_radius = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_max_radius = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_max_radius", "double", 0, "max radius in ration to image", "", &EllipsesDetectionConfig::threshold_max_radius)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_max_radius", "double", 0, "max radius in ration to image", "", &EllipsesDetectionConfig::threshold_max_radius)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.filter_rings = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.filter_rings = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.filter_rings = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("filter_rings", "bool", 0, "rings only", "", &EllipsesDetectionConfig::filter_rings)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("filter_rings", "bool", 0, "rings only", "", &EllipsesDetectionConfig::filter_rings)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_ring_center = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_ring_center = 0.5;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_ring_center = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_ring_center", "double", 0, "ring center offsets", "", &EllipsesDetectionConfig::threshold_ring_center)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_ring_center", "double", 0, "ring center offsets", "", &EllipsesDetectionConfig::threshold_ring_center)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.threshold_ring_ratio = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.threshold_ring_ratio = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.threshold_ring_ratio = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_ring_ratio", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::threshold_ring_ratio)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("threshold_ring_ratio", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::threshold_ring_ratio)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.pose_estimation = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.pose_estimation = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.pose_estimation = 2;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("pose_estimation", "int", 0, "Estimate Pose", "{'enum_description': 'Pose estimation strategy', 'enum': [{'srcline': 43, 'description': 'Off', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'off'}, {'srcline': 44, 'description': 'OpenCV', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'solvePnP'}, {'srcline': 45, 'description': 'Trucco', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'pose_from_ellipse'}]}", &EllipsesDetectionConfig::pose_estimation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<int>("pose_estimation", "int", 0, "Estimate Pose", "{'enum_description': 'Pose estimation strategy', 'enum': [{'srcline': 43, 'description': 'Off', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 0, 'ctype': 'int', 'type': 'int', 'name': 'off'}, {'srcline': 44, 'description': 'OpenCV', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 1, 'ctype': 'int', 'type': 'int', 'name': 'solvePnP'}, {'srcline': 45, 'description': 'Trucco', 'srcfile': '/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg', 'cconsttype': 'const int', 'value': 2, 'ctype': 'int', 'type': 'int', 'name': 'pose_from_ellipse'}]}", &EllipsesDetectionConfig::pose_estimation)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.circle_diameter = 0.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.circle_diameter = 1.0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.circle_diameter = 0.1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("circle_diameter", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::circle_diameter)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<double>("circle_diameter", "double", 0, "ring cirlce ratio", "", &EllipsesDetectionConfig::circle_diameter)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.skip_second_tf = 0;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.skip_second_tf = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.skip_second_tf = 1;
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("skip_second_tf", "bool", 0, "skips publishing the scound solution as tf", "", &EllipsesDetectionConfig::skip_second_tf)));
//#line 290 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(EllipsesDetectionConfig::AbstractParamDescriptionConstPtr(new EllipsesDetectionConfig::ParamDescription<bool>("skip_second_tf", "bool", 0, "skips publishing the scound solution as tf", "", &EllipsesDetectionConfig::skip_second_tf)));
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 245 "/opt/ros/kinetic/lib/python2.7/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(EllipsesDetectionConfig::AbstractGroupDescriptionConstPtr(new EllipsesDetectionConfig::GroupDescription<EllipsesDetectionConfig::DEFAULT, EllipsesDetectionConfig>(Default)));
//#line 366 "/opt/ros/kinetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<EllipsesDetectionConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<EllipsesDetectionConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<EllipsesDetectionConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    EllipsesDetectionConfig __max__;
    EllipsesDetectionConfig __min__;
    EllipsesDetectionConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const EllipsesDetectionConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static EllipsesDetectionConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &EllipsesDetectionConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const EllipsesDetectionConfig &EllipsesDetectionConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const EllipsesDetectionConfig &EllipsesDetectionConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const EllipsesDetectionConfig &EllipsesDetectionConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<EllipsesDetectionConfig::AbstractParamDescriptionConstPtr> &EllipsesDetectionConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<EllipsesDetectionConfig::AbstractGroupDescriptionConstPtr> &EllipsesDetectionConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const EllipsesDetectionConfigStatics *EllipsesDetectionConfig::__get_statics__()
  {
    const static EllipsesDetectionConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = EllipsesDetectionConfigStatics::get_instance();

    return statics;
  }

//#line 17 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_threshold = 0;
//#line 18 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_canny = 1;
//#line 24 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_opencv_approx_non = 0;
//#line 25 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_opencv_approx_simple = 1;
//#line 26 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_v4r_simple = 2;
//#line 27 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_v4r_complex = 3;
//#line 28 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_v4r_contour = 4;
//#line 43 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_off = 0;
//#line 44 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_solvePnP = 1;
//#line 45 "/home/srinath/catkin_thesis/src/tuw_marker_detection/tuw_ellipses/cfg/EllipsesDetection.cfg"
      const int EllipsesDetection_pose_from_ellipse = 2;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __ELLIPSESDETECTIONRECONFIGURATOR_H__
